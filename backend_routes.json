{
  "openapi": "3.1.0",
  "info": {
    "title": "Reporter API",
    "description": "API for Reporter application - Public API with no authentication requirements",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Test"],
        "summary": "API Health Check",
        "description": "Simple test endpoint to verify the API is running\n\nReturns basic information about the API status",
        "operationId": "test_endpoint__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register",
        "description": "Register a new user\n\nCreates a new user account with the provided details and returns the user ID",
        "operationId": "register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login",
        "description": "Authenticate user with username and password\n\nValidates user credentials and returns user information",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/all": {
      "get": {
        "tags": ["Users"],
        "summary": "Get All Users",
        "description": "Get all users' profiles\n\nRetrieves the profile information for all users in the system.\nThis endpoint is public and doesn't require authentication.",
        "operationId": "get_all_users_api_user_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserProfileResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Users Api User All Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User Profile",
        "description": "Get user profile by ID\n\nRetrieves the profile information for a specific user by their ID.\nThis endpoint is public and doesn't require authentication.",
        "operationId": "get_user_profile_api_user_profile__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update User Profile",
        "description": "Update user profile\n\nUpdates the profile information for a specific user by their ID.\nOnly the fields provided will be updated.",
        "operationId": "update_user_profile_api_user_profile__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/report/search": {
      "get": {
        "tags": ["Reports"],
        "summary": "Search Reports",
        "description": "Search reports with filters\n\nReturns a list of reports matching the specified filters.\nThis endpoint does not require authentication.",
        "operationId": "search_reports_api_report_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for title or description",
              "title": "Query"
            },
            "description": "Search term for title or description"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category name",
              "title": "Category"
            },
            "description": "Filter by category name"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by location (street, city, state)",
              "title": "Location"
            },
            "description": "Filter by location (street, city, state)"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by start date (YYYY-MM-DD)",
              "title": "Datefrom"
            },
            "description": "Filter by start date (YYYY-MM-DD)"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by end date (YYYY-MM-DD)",
              "title": "Dateto"
            },
            "description": "Filter by end date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportListItem"
                  },
                  "title": "Response Search Reports Api Report Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/report/{report_id}/details": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get Report Details",
        "description": "Get detailed information about a specific report\n\nReturns comprehensive details about a report, including location, images, and votes.\nThis endpoint does not require authentication.",
        "operationId": "get_report_details_api_report__report_id__details_get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/report/": {
      "post": {
        "tags": ["Reports"],
        "summary": "Create Report",
        "description": "Create a new report\n\nCreates a new report with the specified details.\nUser ID can be provided as a query parameter, otherwise uses default user.",
        "operationId": "create_report_api_report__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/report/{report_id}": {
      "put": {
        "tags": ["Reports"],
        "summary": "Update Report",
        "description": "Update a report\n\nUpdates an existing report with new details.\nThis is a public API so any user can update any report.",
        "operationId": "update_report_api_report__report_id__put",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Reports"],
        "summary": "Delete Report",
        "description": "Delete a report\n\nPermanently removes a report from the system.\nThis is a public API so any user can delete any report.",
        "operationId": "delete_report_api_report__report_id__delete",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get All Categories",
        "description": "Get all categories\n\nReturns a list of all available categories in the system.\nThis endpoint does not require authentication.",
        "operationId": "get_categories_api_category__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryBase"
                  },
                  "title": "Response Get Categories Api Category  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create Category",
        "description": "Create a new category\n\nCreates a new category with the provided name and description.\nThis endpoint requires authentication and admin privileges.",
        "operationId": "create_category_api_category__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/category/{category_id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get Category",
        "description": "Get a specific category by ID\n\nReturns details for a specific category identified by its ID.\nThis endpoint does not require authentication.",
        "operationId": "get_category_api_category__category_id__get",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update Category",
        "description": "Update a category\n\nUpdates an existing category with new information.\nThis endpoint requires authentication and admin privileges.",
        "operationId": "update_category_api_category__category_id__put",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete Category",
        "description": "Delete a category\n\nPermanently removes a category from the system.\nThis endpoint requires authentication and admin privileges.",
        "operationId": "delete_category_api_category__category_id__delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/location/": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get All Locations",
        "description": "Get all locations\n\nReturns a list of all location records in the system.\nThis endpoint does not require authentication.",
        "operationId": "get_locations_api_location__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationBase"
                  },
                  "title": "Response Get Locations Api Location  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Locations"],
        "summary": "Create Location",
        "description": "Create a new location\n\nCreates a new location record with the provided details.\nRequires authentication.",
        "operationId": "create_location_api_location__post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/location/{location_id}": {
      "get": {
        "tags": ["Locations"],
        "summary": "Get Location",
        "description": "Get a specific location by ID\n\nReturns detailed information about a specific location.\nThis endpoint does not require authentication.",
        "operationId": "get_location_api_location__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update Location",
        "description": "Update a location\n\nUpdates an existing location with new information.\nOnly fields provided will be updated.\nRequires authentication.",
        "operationId": "update_location_api_location__location_id__put",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Delete Location",
        "description": "Delete a location\n\nPermanently removes a location from the system.\nRequires authentication.",
        "operationId": "delete_location_api_location__location_id__delete",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/image/{report_id}": {
      "get": {
        "tags": ["Images"],
        "summary": "Get Report Images",
        "description": "Get all images for a specific report\n\nReturns a list of all images associated with the specified report.\nThis endpoint does not require authentication.",
        "operationId": "get_report_images_api_image__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageModel"
                  },
                  "title": "Response Get Report Images Api Image  Report Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Images"],
        "summary": "Upload Image",
        "description": "Upload an image for a report\n\nUploads a new image file and associates it with the specified report.\nSupported formats: PNG, JPG, JPEG, GIF.\nRequires authentication.",
        "operationId": "upload_image_api_image__report_id__post",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_image_api_image__report_id__post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/image/{image_id}": {
      "delete": {
        "tags": ["Images"],
        "summary": "Delete Image",
        "description": "Delete an image\n\nPermanently removes an image from the system and deletes the associated file.\nRequires authentication.",
        "operationId": "delete_image_api_image__image_id__delete",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Image Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/vote/{report_id}": {
      "post": {
        "tags": ["Votes"],
        "summary": "Vote on Report",
        "description": "Vote on a report\n\nAllows a user to upvote or downvote a report.\nIf the user has already voted on this report, the previous vote will be updated.\nRequires authentication.",
        "operationId": "vote_report_api_vote__report_id__post",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Votes"],
        "summary": "Get Vote Counts",
        "description": "Get vote counts for a report\n\nReturns the number of upvotes and downvotes for a specific report.\nThis endpoint does not require authentication.",
        "operationId": "get_report_votes_api_vote__report_id__get",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoteCounts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Votes"],
        "summary": "Remove Vote",
        "description": "Remove a user's vote from a report\n\nRemoves the current user's vote from a specific report.\nRequires authentication.",
        "operationId": "remove_vote_api_vote__report_id__delete",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional user ID parameter",
              "title": "User Id"
            },
            "description": "Optional user ID parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": ["message"],
        "title": "BaseResponse",
        "description": "Base model for standard responses"
      },
      "Body_upload_image_api_image__report_id__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Image file to upload (PNG, JPG, JPEG, GIF)"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_image_api_image__report_id__post"
      },
      "CategoryBase": {
        "properties": {
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "categoryName": {
            "type": "string",
            "title": "Categoryname"
          },
          "categoryDescription": {
            "type": "string",
            "title": "Categorydescription"
          }
        },
        "type": "object",
        "required": ["categoryID", "categoryName", "categoryDescription"],
        "title": "CategoryBase"
      },
      "CategoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Category name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Category description"
          }
        },
        "type": "object",
        "required": ["name", "description"],
        "title": "CategoryCreate"
      },
      "CategoryResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Category ID"
          }
        },
        "type": "object",
        "required": ["message", "id"],
        "title": "CategoryResponse"
      },
      "CategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Category name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Category description"
          }
        },
        "type": "object",
        "title": "CategoryUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageModel": {
        "properties": {
          "imageID": {
            "type": "integer",
            "title": "Imageid"
          },
          "imageURL": {
            "type": "string",
            "title": "Imageurl"
          },
          "reportID": {
            "type": "integer",
            "title": "Reportid"
          },
          "uploadedAt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploadedat"
          }
        },
        "type": "object",
        "required": ["imageID", "imageURL", "reportID"],
        "title": "ImageModel"
      },
      "ImageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Image ID"
          }
        },
        "type": "object",
        "required": ["message", "id"],
        "title": "ImageResponse"
      },
      "LocationBase": {
        "properties": {
          "locationID": {
            "type": "integer",
            "title": "Locationid"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "street": {
            "type": "string",
            "title": "Street"
          },
          "district": {
            "type": "string",
            "title": "District"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "postalCode": {
            "type": "string",
            "title": "Postalcode"
          },
          "landmark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Landmark"
          }
        },
        "type": "object",
        "required": [
          "locationID",
          "latitude",
          "longitude",
          "street",
          "district",
          "city",
          "state",
          "country",
          "postalCode"
        ],
        "title": "LocationBase"
      },
      "LocationCreate": {
        "properties": {
          "latitude": {
            "type": "number",
            "maximum": 90,
            "minimum": -90,
            "title": "Latitude",
            "description": "Latitude (-90 to 90)"
          },
          "longitude": {
            "type": "number",
            "maximum": 180,
            "minimum": -180,
            "title": "Longitude",
            "description": "Longitude (-180 to 180)"
          },
          "street": {
            "type": "string",
            "title": "Street",
            "description": "Street address"
          },
          "district": {
            "type": "string",
            "title": "District",
            "description": "District"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "City"
          },
          "state": {
            "type": "string",
            "title": "State",
            "description": "State/Province"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country"
          },
          "postalCode": {
            "type": "string",
            "title": "Postalcode",
            "description": "Postal/ZIP code"
          },
          "landmark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Landmark",
            "description": "Nearby landmark (optional)"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude",
          "street",
          "district",
          "city",
          "state",
          "country",
          "postalCode"
        ],
        "title": "LocationCreate"
      },
      "LocationResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Location ID"
          }
        },
        "type": "object",
        "required": ["message", "id"],
        "title": "LocationResponse"
      },
      "LocationUpdate": {
        "properties": {
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90,
                "minimum": -90
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude (-90 to 90)"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180,
                "minimum": -180
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude (-180 to 180)"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street",
            "description": "Street address"
          },
          "district": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "District",
            "description": "District"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/Province"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          },
          "postalCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postalcode",
            "description": "Postal/ZIP code"
          },
          "landmark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Landmark",
            "description": "Nearby landmark (optional)"
          }
        },
        "type": "object",
        "title": "LocationUpdate"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "User's username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "User's password"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "LoginRequest"
      },
      "LoginResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          }
        },
        "type": "object",
        "required": ["message", "user"],
        "title": "LoginResponse"
      },
      "ProfileUpdateRequest": {
        "properties": {
          "firstName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname",
            "description": "User's first name"
          },
          "lastName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname",
            "description": "User's last name"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middlename",
            "description": "User's middle name (optional)"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User's email address"
          },
          "contactNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactnumber",
            "description": "User's contact number"
          }
        },
        "type": "object",
        "title": "ProfileUpdateRequest"
      },
      "RegisterRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "User's unique username"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "title": "Password",
            "description": "User's password (min 6 characters)"
          },
          "firstName": {
            "type": "string",
            "title": "Firstname",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "contactNumber": {
            "type": "string",
            "title": "Contactnumber",
            "description": "User's contact number"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middlename",
            "description": "User's middle name (optional)"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "firstName",
          "lastName",
          "email",
          "contactNumber"
        ],
        "title": "RegisterRequest"
      },
      "RegisterResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID of the newly registered user"
          }
        },
        "type": "object",
        "required": ["message", "id"],
        "title": "RegisterResponse"
      },
      "ReportCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Report title"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Detailed description of the report"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid",
            "description": "Category ID"
          },
          "locationID": {
            "type": "integer",
            "title": "Locationid",
            "description": "Location ID"
          }
        },
        "type": "object",
        "required": ["title", "description", "categoryID", "locationID"],
        "title": "ReportCreate"
      },
      "ReportDetail": {
        "properties": {
          "reportID": {
            "type": "integer",
            "title": "Reportid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "categoryID": {
            "type": "integer",
            "title": "Categoryid"
          },
          "locationID": {
            "type": "integer",
            "title": "Locationid"
          },
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "createdAt": {
            "type": "string",
            "title": "Createdat"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedat"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "categoryName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categoryname"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "upvotes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upvotes",
            "default": 0
          },
          "downvotes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downvotes",
            "default": 0
          },
          "images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Images",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "reportID",
          "title",
          "description",
          "categoryID",
          "locationID",
          "userID",
          "createdAt"
        ],
        "title": "ReportDetail"
      },
      "ReportListItem": {
        "properties": {
          "reportID": {
            "type": "integer",
            "title": "Reportid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "categoryName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categoryname"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "imageCount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imagecount",
            "default": 0
          },
          "upvotes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upvotes",
            "default": 0
          },
          "downvotes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downvotes",
            "default": 0
          },
          "createdAt": {
            "type": "string",
            "title": "Createdat"
          }
        },
        "type": "object",
        "required": ["reportID", "title", "description", "createdAt"],
        "title": "ReportListItem"
      },
      "ReportResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Report ID"
          }
        },
        "type": "object",
        "required": ["message", "id"],
        "title": "ReportResponse"
      },
      "ReportUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Report title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description"
          },
          "categoryID": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categoryid",
            "description": "Category ID"
          },
          "locationID": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locationid",
            "description": "Location ID"
          }
        },
        "type": "object",
        "title": "ReportUpdate"
      },
      "UserInfo": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": ["id", "username", "role"],
        "title": "UserInfo"
      },
      "UserProfileResponse": {
        "properties": {
          "userID": {
            "type": "integer",
            "title": "Userid"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "firstName": {
            "type": "string",
            "title": "Firstname"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "contactNumber": {
            "type": "string",
            "title": "Contactnumber"
          },
          "middleName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Middlename"
          }
        },
        "type": "object",
        "required": [
          "userID",
          "username",
          "role",
          "firstName",
          "lastName",
          "email",
          "contactNumber"
        ],
        "title": "UserProfileResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "VoteCounts": {
        "properties": {
          "upvotes": {
            "type": "integer",
            "title": "Upvotes",
            "description": "Number of upvotes"
          },
          "downvotes": {
            "type": "integer",
            "title": "Downvotes",
            "description": "Number of downvotes"
          }
        },
        "type": "object",
        "required": ["upvotes", "downvotes"],
        "title": "VoteCounts"
      },
      "VoteCreate": {
        "properties": {
          "voteType": {
            "type": "string",
            "enum": ["upvote", "downvote"],
            "title": "Votetype",
            "description": "Type of vote (upvote or downvote)"
          }
        },
        "type": "object",
        "required": ["voteType"],
        "title": "VoteCreate"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Simple username/password login (no JWT tokens)"
    },
    {
      "name": "Users",
      "description": "Public user management endpoints"
    },
    {
      "name": "Reports",
      "description": "Report management endpoints"
    },
    {
      "name": "Categories",
      "description": "Category management endpoints"
    },
    {
      "name": "Locations",
      "description": "Location management endpoints"
    },
    {
      "name": "Images",
      "description": "Image management endpoints"
    },
    {
      "name": "Votes",
      "description": "Voting endpoints"
    },
    {
      "name": "Test",
      "description": "Test endpoints for system verification"
    }
  ]
}
